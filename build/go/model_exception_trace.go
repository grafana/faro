/*
Faro Collector API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package faro

import (
	"encoding/json"
)

// checks if the ExceptionTrace type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExceptionTrace{}

// ExceptionTrace struct for ExceptionTrace
type ExceptionTrace struct {
	TraceId *string `json:"trace_id,omitempty"`
	SpanId *string `json:"span_id,omitempty"`
}

// NewExceptionTrace instantiates a new ExceptionTrace object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExceptionTrace() *ExceptionTrace {
	this := ExceptionTrace{}
	return &this
}

// NewExceptionTraceWithDefaults instantiates a new ExceptionTrace object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExceptionTraceWithDefaults() *ExceptionTrace {
	this := ExceptionTrace{}
	return &this
}

// GetTraceId returns the TraceId field value if set, zero value otherwise.
func (o *ExceptionTrace) GetTraceId() string {
	if o == nil || IsNil(o.TraceId) {
		var ret string
		return ret
	}
	return *o.TraceId
}

// GetTraceIdOk returns a tuple with the TraceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExceptionTrace) GetTraceIdOk() (*string, bool) {
	if o == nil || IsNil(o.TraceId) {
		return nil, false
	}
	return o.TraceId, true
}

// HasTraceId returns a boolean if a field has been set.
func (o *ExceptionTrace) HasTraceId() bool {
	if o != nil && !IsNil(o.TraceId) {
		return true
	}

	return false
}

// SetTraceId gets a reference to the given string and assigns it to the TraceId field.
func (o *ExceptionTrace) SetTraceId(v string) {
	o.TraceId = &v
}

// GetSpanId returns the SpanId field value if set, zero value otherwise.
func (o *ExceptionTrace) GetSpanId() string {
	if o == nil || IsNil(o.SpanId) {
		var ret string
		return ret
	}
	return *o.SpanId
}

// GetSpanIdOk returns a tuple with the SpanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExceptionTrace) GetSpanIdOk() (*string, bool) {
	if o == nil || IsNil(o.SpanId) {
		return nil, false
	}
	return o.SpanId, true
}

// HasSpanId returns a boolean if a field has been set.
func (o *ExceptionTrace) HasSpanId() bool {
	if o != nil && !IsNil(o.SpanId) {
		return true
	}

	return false
}

// SetSpanId gets a reference to the given string and assigns it to the SpanId field.
func (o *ExceptionTrace) SetSpanId(v string) {
	o.SpanId = &v
}

func (o ExceptionTrace) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExceptionTrace) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TraceId) {
		toSerialize["trace_id"] = o.TraceId
	}
	if !IsNil(o.SpanId) {
		toSerialize["span_id"] = o.SpanId
	}
	return toSerialize, nil
}

type NullableExceptionTrace struct {
	value *ExceptionTrace
	isSet bool
}

func (v NullableExceptionTrace) Get() *ExceptionTrace {
	return v.value
}

func (v *NullableExceptionTrace) Set(val *ExceptionTrace) {
	v.value = val
	v.isSet = true
}

func (v NullableExceptionTrace) IsSet() bool {
	return v.isSet
}

func (v *NullableExceptionTrace) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExceptionTrace(val *ExceptionTrace) *NullableExceptionTrace {
	return &NullableExceptionTrace{value: val, isSet: true}
}

func (v NullableExceptionTrace) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExceptionTrace) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


