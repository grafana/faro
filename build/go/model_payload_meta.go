/*
Faro API

The Faro API accepts payloads from the Faro SDKs.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package faro

import (
	"encoding/json"
)

// checks if the PayloadMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PayloadMeta{}

// PayloadMeta struct for PayloadMeta
type PayloadMeta struct {
	Sdk     *SdkMeta         `json:"sdk,omitempty"`
	App     *AppMeta         `json:"app,omitempty"`
	User    *UserMeta        `json:"user,omitempty"`
	Session *SessionMeta     `json:"session,omitempty"`
	Page    *PageMeta        `json:"page,omitempty"`
	Browser *BrowserMeta     `json:"browser,omitempty"`
	View    *PayloadMetaView `json:"view,omitempty"`
}

// NewPayloadMeta instantiates a new PayloadMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayloadMeta() *PayloadMeta {
	this := PayloadMeta{}
	return &this
}

// NewPayloadMetaWithDefaults instantiates a new PayloadMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayloadMetaWithDefaults() *PayloadMeta {
	this := PayloadMeta{}
	return &this
}

// GetSdk returns the Sdk field value if set, zero value otherwise.
func (o *PayloadMeta) GetSdk() SdkMeta {
	if o == nil || IsNil(o.Sdk) {
		var ret SdkMeta
		return ret
	}
	return *o.Sdk
}

// GetSdkOk returns a tuple with the Sdk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayloadMeta) GetSdkOk() (*SdkMeta, bool) {
	if o == nil || IsNil(o.Sdk) {
		return nil, false
	}
	return o.Sdk, true
}

// HasSdk returns a boolean if a field has been set.
func (o *PayloadMeta) HasSdk() bool {
	if o != nil && !IsNil(o.Sdk) {
		return true
	}

	return false
}

// SetSdk gets a reference to the given SdkMeta and assigns it to the Sdk field.
func (o *PayloadMeta) SetSdk(v SdkMeta) {
	o.Sdk = &v
}

// GetApp returns the App field value if set, zero value otherwise.
func (o *PayloadMeta) GetApp() AppMeta {
	if o == nil || IsNil(o.App) {
		var ret AppMeta
		return ret
	}
	return *o.App
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayloadMeta) GetAppOk() (*AppMeta, bool) {
	if o == nil || IsNil(o.App) {
		return nil, false
	}
	return o.App, true
}

// HasApp returns a boolean if a field has been set.
func (o *PayloadMeta) HasApp() bool {
	if o != nil && !IsNil(o.App) {
		return true
	}

	return false
}

// SetApp gets a reference to the given AppMeta and assigns it to the App field.
func (o *PayloadMeta) SetApp(v AppMeta) {
	o.App = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *PayloadMeta) GetUser() UserMeta {
	if o == nil || IsNil(o.User) {
		var ret UserMeta
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayloadMeta) GetUserOk() (*UserMeta, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *PayloadMeta) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given UserMeta and assigns it to the User field.
func (o *PayloadMeta) SetUser(v UserMeta) {
	o.User = &v
}

// GetSession returns the Session field value if set, zero value otherwise.
func (o *PayloadMeta) GetSession() SessionMeta {
	if o == nil || IsNil(o.Session) {
		var ret SessionMeta
		return ret
	}
	return *o.Session
}

// GetSessionOk returns a tuple with the Session field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayloadMeta) GetSessionOk() (*SessionMeta, bool) {
	if o == nil || IsNil(o.Session) {
		return nil, false
	}
	return o.Session, true
}

// HasSession returns a boolean if a field has been set.
func (o *PayloadMeta) HasSession() bool {
	if o != nil && !IsNil(o.Session) {
		return true
	}

	return false
}

// SetSession gets a reference to the given SessionMeta and assigns it to the Session field.
func (o *PayloadMeta) SetSession(v SessionMeta) {
	o.Session = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *PayloadMeta) GetPage() PageMeta {
	if o == nil || IsNil(o.Page) {
		var ret PageMeta
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayloadMeta) GetPageOk() (*PageMeta, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *PayloadMeta) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given PageMeta and assigns it to the Page field.
func (o *PayloadMeta) SetPage(v PageMeta) {
	o.Page = &v
}

// GetBrowser returns the Browser field value if set, zero value otherwise.
func (o *PayloadMeta) GetBrowser() BrowserMeta {
	if o == nil || IsNil(o.Browser) {
		var ret BrowserMeta
		return ret
	}
	return *o.Browser
}

// GetBrowserOk returns a tuple with the Browser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayloadMeta) GetBrowserOk() (*BrowserMeta, bool) {
	if o == nil || IsNil(o.Browser) {
		return nil, false
	}
	return o.Browser, true
}

// HasBrowser returns a boolean if a field has been set.
func (o *PayloadMeta) HasBrowser() bool {
	if o != nil && !IsNil(o.Browser) {
		return true
	}

	return false
}

// SetBrowser gets a reference to the given BrowserMeta and assigns it to the Browser field.
func (o *PayloadMeta) SetBrowser(v BrowserMeta) {
	o.Browser = &v
}

// GetView returns the View field value if set, zero value otherwise.
func (o *PayloadMeta) GetView() PayloadMetaView {
	if o == nil || IsNil(o.View) {
		var ret PayloadMetaView
		return ret
	}
	return *o.View
}

// GetViewOk returns a tuple with the View field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayloadMeta) GetViewOk() (*PayloadMetaView, bool) {
	if o == nil || IsNil(o.View) {
		return nil, false
	}
	return o.View, true
}

// HasView returns a boolean if a field has been set.
func (o *PayloadMeta) HasView() bool {
	if o != nil && !IsNil(o.View) {
		return true
	}

	return false
}

// SetView gets a reference to the given PayloadMetaView and assigns it to the View field.
func (o *PayloadMeta) SetView(v PayloadMetaView) {
	o.View = &v
}

func (o PayloadMeta) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PayloadMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Sdk) {
		toSerialize["sdk"] = o.Sdk
	}
	if !IsNil(o.App) {
		toSerialize["app"] = o.App
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.Session) {
		toSerialize["session"] = o.Session
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.Browser) {
		toSerialize["browser"] = o.Browser
	}
	if !IsNil(o.View) {
		toSerialize["view"] = o.View
	}
	return toSerialize, nil
}

type NullablePayloadMeta struct {
	value *PayloadMeta
	isSet bool
}

func (v NullablePayloadMeta) Get() *PayloadMeta {
	return v.value
}

func (v *NullablePayloadMeta) Set(val *PayloadMeta) {
	v.value = val
	v.isSet = true
}

func (v NullablePayloadMeta) IsSet() bool {
	return v.isSet
}

func (v *NullablePayloadMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayloadMeta(val *PayloadMeta) *NullablePayloadMeta {
	return &NullablePayloadMeta{value: val, isSet: true}
}

func (v NullablePayloadMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayloadMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
