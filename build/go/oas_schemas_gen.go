// Code generated by ogen, DO NOT EDIT.

package faro

import (
	"fmt"
	"time"

	"github.com/go-faster/jx"
)

func (s *ExceptionStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// Ref: #/components/schemas/AppMeta
type AppMeta struct {
	Name        string `json:"name"`
	Release     string `json:"release"`
	Version     string `json:"version"`
	Environment string `json:"environment"`
}

// GetName returns the value of Name.
func (s *AppMeta) GetName() string {
	return s.Name
}

// GetRelease returns the value of Release.
func (s *AppMeta) GetRelease() string {
	return s.Release
}

// GetVersion returns the value of Version.
func (s *AppMeta) GetVersion() string {
	return s.Version
}

// GetEnvironment returns the value of Environment.
func (s *AppMeta) GetEnvironment() string {
	return s.Environment
}

// SetName sets the value of Name.
func (s *AppMeta) SetName(val string) {
	s.Name = val
}

// SetRelease sets the value of Release.
func (s *AppMeta) SetRelease(val string) {
	s.Release = val
}

// SetVersion sets the value of Version.
func (s *AppMeta) SetVersion(val string) {
	s.Version = val
}

// SetEnvironment sets the value of Environment.
func (s *AppMeta) SetEnvironment(val string) {
	s.Environment = val
}

// Ref: #/components/schemas/BrowserMeta
type BrowserMeta struct {
	Name    OptString `json:"name"`
	Version OptString `json:"version"`
	Os      OptString `json:"os"`
	Mobile  OptBool   `json:"mobile"`
}

// GetName returns the value of Name.
func (s *BrowserMeta) GetName() OptString {
	return s.Name
}

// GetVersion returns the value of Version.
func (s *BrowserMeta) GetVersion() OptString {
	return s.Version
}

// GetOs returns the value of Os.
func (s *BrowserMeta) GetOs() OptString {
	return s.Os
}

// GetMobile returns the value of Mobile.
func (s *BrowserMeta) GetMobile() OptBool {
	return s.Mobile
}

// SetName sets the value of Name.
func (s *BrowserMeta) SetName(val OptString) {
	s.Name = val
}

// SetVersion sets the value of Version.
func (s *BrowserMeta) SetVersion(val OptString) {
	s.Version = val
}

// SetOs sets the value of Os.
func (s *BrowserMeta) SetOs(val OptString) {
	s.Os = val
}

// SetMobile sets the value of Mobile.
func (s *BrowserMeta) SetMobile(val OptBool) {
	s.Mobile = val
}

// CollectAppKeyPostAccepted is response for CollectAppKeyPost operation.
type CollectAppKeyPostAccepted struct{}

// Ref: #/components/schemas/Event
type Event struct {
	Name       string             `json:"name"`
	Domain     string             `json:"domain"`
	Attributes OptEventAttributes `json:"attributes"`
	Timestamp  time.Time          `json:"timestamp"`
}

// GetName returns the value of Name.
func (s *Event) GetName() string {
	return s.Name
}

// GetDomain returns the value of Domain.
func (s *Event) GetDomain() string {
	return s.Domain
}

// GetAttributes returns the value of Attributes.
func (s *Event) GetAttributes() OptEventAttributes {
	return s.Attributes
}

// GetTimestamp returns the value of Timestamp.
func (s *Event) GetTimestamp() time.Time {
	return s.Timestamp
}

// SetName sets the value of Name.
func (s *Event) SetName(val string) {
	s.Name = val
}

// SetDomain sets the value of Domain.
func (s *Event) SetDomain(val string) {
	s.Domain = val
}

// SetAttributes sets the value of Attributes.
func (s *Event) SetAttributes(val OptEventAttributes) {
	s.Attributes = val
}

// SetTimestamp sets the value of Timestamp.
func (s *Event) SetTimestamp(val time.Time) {
	s.Timestamp = val
}

type EventAttributes map[string]string

func (s *EventAttributes) init() EventAttributes {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/Exception
type Exception struct {
	Type       string              `json:"type"`
	Value      string              `json:"value"`
	Stacktrace []StackFrame        `json:"stacktrace"`
	Timestamp  time.Time           `json:"timestamp"`
	Trace      OptExceptionTrace   `json:"trace"`
	Context    OptExceptionContext `json:"context"`
}

// GetType returns the value of Type.
func (s *Exception) GetType() string {
	return s.Type
}

// GetValue returns the value of Value.
func (s *Exception) GetValue() string {
	return s.Value
}

// GetStacktrace returns the value of Stacktrace.
func (s *Exception) GetStacktrace() []StackFrame {
	return s.Stacktrace
}

// GetTimestamp returns the value of Timestamp.
func (s *Exception) GetTimestamp() time.Time {
	return s.Timestamp
}

// GetTrace returns the value of Trace.
func (s *Exception) GetTrace() OptExceptionTrace {
	return s.Trace
}

// GetContext returns the value of Context.
func (s *Exception) GetContext() OptExceptionContext {
	return s.Context
}

// SetType sets the value of Type.
func (s *Exception) SetType(val string) {
	s.Type = val
}

// SetValue sets the value of Value.
func (s *Exception) SetValue(val string) {
	s.Value = val
}

// SetStacktrace sets the value of Stacktrace.
func (s *Exception) SetStacktrace(val []StackFrame) {
	s.Stacktrace = val
}

// SetTimestamp sets the value of Timestamp.
func (s *Exception) SetTimestamp(val time.Time) {
	s.Timestamp = val
}

// SetTrace sets the value of Trace.
func (s *Exception) SetTrace(val OptExceptionTrace) {
	s.Trace = val
}

// SetContext sets the value of Context.
func (s *Exception) SetContext(val OptExceptionContext) {
	s.Context = val
}

type ExceptionContext map[string]string

func (s *ExceptionContext) init() ExceptionContext {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// ExceptionStatusCode wraps Exception with StatusCode.
type ExceptionStatusCode struct {
	StatusCode int
	Response   Exception
}

// GetStatusCode returns the value of StatusCode.
func (s *ExceptionStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ExceptionStatusCode) GetResponse() Exception {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ExceptionStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ExceptionStatusCode) SetResponse(val Exception) {
	s.Response = val
}

type ExceptionTrace struct {
	TraceID OptString `json:"trace_id"`
	SpanID  OptString `json:"span_id"`
}

// GetTraceID returns the value of TraceID.
func (s *ExceptionTrace) GetTraceID() OptString {
	return s.TraceID
}

// GetSpanID returns the value of SpanID.
func (s *ExceptionTrace) GetSpanID() OptString {
	return s.SpanID
}

// SetTraceID sets the value of TraceID.
func (s *ExceptionTrace) SetTraceID(val OptString) {
	s.TraceID = val
}

// SetSpanID sets the value of SpanID.
func (s *ExceptionTrace) SetSpanID(val OptString) {
	s.SpanID = val
}

// Ref: #/components/schemas/Log
type Log struct {
	Message   string        `json:"message"`
	Level     string        `json:"level"`
	Context   OptLogContext `json:"context"`
	Timestamp time.Time     `json:"timestamp"`
	Trace     OptLogTrace   `json:"trace"`
}

// GetMessage returns the value of Message.
func (s *Log) GetMessage() string {
	return s.Message
}

// GetLevel returns the value of Level.
func (s *Log) GetLevel() string {
	return s.Level
}

// GetContext returns the value of Context.
func (s *Log) GetContext() OptLogContext {
	return s.Context
}

// GetTimestamp returns the value of Timestamp.
func (s *Log) GetTimestamp() time.Time {
	return s.Timestamp
}

// GetTrace returns the value of Trace.
func (s *Log) GetTrace() OptLogTrace {
	return s.Trace
}

// SetMessage sets the value of Message.
func (s *Log) SetMessage(val string) {
	s.Message = val
}

// SetLevel sets the value of Level.
func (s *Log) SetLevel(val string) {
	s.Level = val
}

// SetContext sets the value of Context.
func (s *Log) SetContext(val OptLogContext) {
	s.Context = val
}

// SetTimestamp sets the value of Timestamp.
func (s *Log) SetTimestamp(val time.Time) {
	s.Timestamp = val
}

// SetTrace sets the value of Trace.
func (s *Log) SetTrace(val OptLogTrace) {
	s.Trace = val
}

type LogContext map[string]string

func (s *LogContext) init() LogContext {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

type LogTrace struct {
	TraceID string `json:"trace_id"`
	SpanID  string `json:"span_id"`
}

// GetTraceID returns the value of TraceID.
func (s *LogTrace) GetTraceID() string {
	return s.TraceID
}

// GetSpanID returns the value of SpanID.
func (s *LogTrace) GetSpanID() string {
	return s.SpanID
}

// SetTraceID sets the value of TraceID.
func (s *LogTrace) SetTraceID(val string) {
	s.TraceID = val
}

// SetSpanID sets the value of SpanID.
func (s *LogTrace) SetSpanID(val string) {
	s.SpanID = val
}

// Ref: #/components/schemas/Measurement
type Measurement struct {
	Values    MeasurementValues     `json:"values"`
	Type      string                `json:"type"`
	Timestamp time.Time             `json:"timestamp"`
	Trace     OptMeasurementTrace   `json:"trace"`
	Context   OptMeasurementContext `json:"context"`
}

// GetValues returns the value of Values.
func (s *Measurement) GetValues() MeasurementValues {
	return s.Values
}

// GetType returns the value of Type.
func (s *Measurement) GetType() string {
	return s.Type
}

// GetTimestamp returns the value of Timestamp.
func (s *Measurement) GetTimestamp() time.Time {
	return s.Timestamp
}

// GetTrace returns the value of Trace.
func (s *Measurement) GetTrace() OptMeasurementTrace {
	return s.Trace
}

// GetContext returns the value of Context.
func (s *Measurement) GetContext() OptMeasurementContext {
	return s.Context
}

// SetValues sets the value of Values.
func (s *Measurement) SetValues(val MeasurementValues) {
	s.Values = val
}

// SetType sets the value of Type.
func (s *Measurement) SetType(val string) {
	s.Type = val
}

// SetTimestamp sets the value of Timestamp.
func (s *Measurement) SetTimestamp(val time.Time) {
	s.Timestamp = val
}

// SetTrace sets the value of Trace.
func (s *Measurement) SetTrace(val OptMeasurementTrace) {
	s.Trace = val
}

// SetContext sets the value of Context.
func (s *Measurement) SetContext(val OptMeasurementContext) {
	s.Context = val
}

type MeasurementContext map[string]string

func (s *MeasurementContext) init() MeasurementContext {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

type MeasurementTrace struct {
	TraceID OptString `json:"trace_id"`
	SpanID  OptString `json:"span_id"`
}

// GetTraceID returns the value of TraceID.
func (s *MeasurementTrace) GetTraceID() OptString {
	return s.TraceID
}

// GetSpanID returns the value of SpanID.
func (s *MeasurementTrace) GetSpanID() OptString {
	return s.SpanID
}

// SetTraceID sets the value of TraceID.
func (s *MeasurementTrace) SetTraceID(val OptString) {
	s.TraceID = val
}

// SetSpanID sets the value of SpanID.
func (s *MeasurementTrace) SetSpanID(val OptString) {
	s.SpanID = val
}

type MeasurementValues map[string]float64

func (s *MeasurementValues) init() MeasurementValues {
	m := *s
	if m == nil {
		m = map[string]float64{}
		*s = m
	}
	return m
}

// NewOptAppMeta returns new OptAppMeta with value set to v.
func NewOptAppMeta(v AppMeta) OptAppMeta {
	return OptAppMeta{
		Value: v,
		Set:   true,
	}
}

// OptAppMeta is optional AppMeta.
type OptAppMeta struct {
	Value AppMeta
	Set   bool
}

// IsSet returns true if OptAppMeta was set.
func (o OptAppMeta) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAppMeta) Reset() {
	var v AppMeta
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAppMeta) SetTo(v AppMeta) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAppMeta) Get() (v AppMeta, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAppMeta) Or(d AppMeta) AppMeta {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBrowserMeta returns new OptBrowserMeta with value set to v.
func NewOptBrowserMeta(v BrowserMeta) OptBrowserMeta {
	return OptBrowserMeta{
		Value: v,
		Set:   true,
	}
}

// OptBrowserMeta is optional BrowserMeta.
type OptBrowserMeta struct {
	Value BrowserMeta
	Set   bool
}

// IsSet returns true if OptBrowserMeta was set.
func (o OptBrowserMeta) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBrowserMeta) Reset() {
	var v BrowserMeta
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBrowserMeta) SetTo(v BrowserMeta) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBrowserMeta) Get() (v BrowserMeta, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBrowserMeta) Or(d BrowserMeta) BrowserMeta {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptEventAttributes returns new OptEventAttributes with value set to v.
func NewOptEventAttributes(v EventAttributes) OptEventAttributes {
	return OptEventAttributes{
		Value: v,
		Set:   true,
	}
}

// OptEventAttributes is optional EventAttributes.
type OptEventAttributes struct {
	Value EventAttributes
	Set   bool
}

// IsSet returns true if OptEventAttributes was set.
func (o OptEventAttributes) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptEventAttributes) Reset() {
	var v EventAttributes
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEventAttributes) SetTo(v EventAttributes) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEventAttributes) Get() (v EventAttributes, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptEventAttributes) Or(d EventAttributes) EventAttributes {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptExceptionContext returns new OptExceptionContext with value set to v.
func NewOptExceptionContext(v ExceptionContext) OptExceptionContext {
	return OptExceptionContext{
		Value: v,
		Set:   true,
	}
}

// OptExceptionContext is optional ExceptionContext.
type OptExceptionContext struct {
	Value ExceptionContext
	Set   bool
}

// IsSet returns true if OptExceptionContext was set.
func (o OptExceptionContext) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptExceptionContext) Reset() {
	var v ExceptionContext
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptExceptionContext) SetTo(v ExceptionContext) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptExceptionContext) Get() (v ExceptionContext, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptExceptionContext) Or(d ExceptionContext) ExceptionContext {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptExceptionTrace returns new OptExceptionTrace with value set to v.
func NewOptExceptionTrace(v ExceptionTrace) OptExceptionTrace {
	return OptExceptionTrace{
		Value: v,
		Set:   true,
	}
}

// OptExceptionTrace is optional ExceptionTrace.
type OptExceptionTrace struct {
	Value ExceptionTrace
	Set   bool
}

// IsSet returns true if OptExceptionTrace was set.
func (o OptExceptionTrace) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptExceptionTrace) Reset() {
	var v ExceptionTrace
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptExceptionTrace) SetTo(v ExceptionTrace) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptExceptionTrace) Get() (v ExceptionTrace, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptExceptionTrace) Or(d ExceptionTrace) ExceptionTrace {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptLogContext returns new OptLogContext with value set to v.
func NewOptLogContext(v LogContext) OptLogContext {
	return OptLogContext{
		Value: v,
		Set:   true,
	}
}

// OptLogContext is optional LogContext.
type OptLogContext struct {
	Value LogContext
	Set   bool
}

// IsSet returns true if OptLogContext was set.
func (o OptLogContext) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLogContext) Reset() {
	var v LogContext
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLogContext) SetTo(v LogContext) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLogContext) Get() (v LogContext, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptLogContext) Or(d LogContext) LogContext {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptLogTrace returns new OptLogTrace with value set to v.
func NewOptLogTrace(v LogTrace) OptLogTrace {
	return OptLogTrace{
		Value: v,
		Set:   true,
	}
}

// OptLogTrace is optional LogTrace.
type OptLogTrace struct {
	Value LogTrace
	Set   bool
}

// IsSet returns true if OptLogTrace was set.
func (o OptLogTrace) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLogTrace) Reset() {
	var v LogTrace
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLogTrace) SetTo(v LogTrace) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLogTrace) Get() (v LogTrace, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptLogTrace) Or(d LogTrace) LogTrace {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMeasurementContext returns new OptMeasurementContext with value set to v.
func NewOptMeasurementContext(v MeasurementContext) OptMeasurementContext {
	return OptMeasurementContext{
		Value: v,
		Set:   true,
	}
}

// OptMeasurementContext is optional MeasurementContext.
type OptMeasurementContext struct {
	Value MeasurementContext
	Set   bool
}

// IsSet returns true if OptMeasurementContext was set.
func (o OptMeasurementContext) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMeasurementContext) Reset() {
	var v MeasurementContext
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMeasurementContext) SetTo(v MeasurementContext) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMeasurementContext) Get() (v MeasurementContext, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMeasurementContext) Or(d MeasurementContext) MeasurementContext {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMeasurementTrace returns new OptMeasurementTrace with value set to v.
func NewOptMeasurementTrace(v MeasurementTrace) OptMeasurementTrace {
	return OptMeasurementTrace{
		Value: v,
		Set:   true,
	}
}

// OptMeasurementTrace is optional MeasurementTrace.
type OptMeasurementTrace struct {
	Value MeasurementTrace
	Set   bool
}

// IsSet returns true if OptMeasurementTrace was set.
func (o OptMeasurementTrace) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMeasurementTrace) Reset() {
	var v MeasurementTrace
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMeasurementTrace) SetTo(v MeasurementTrace) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMeasurementTrace) Get() (v MeasurementTrace, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMeasurementTrace) Or(d MeasurementTrace) MeasurementTrace {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPageMeta returns new OptPageMeta with value set to v.
func NewOptPageMeta(v PageMeta) OptPageMeta {
	return OptPageMeta{
		Value: v,
		Set:   true,
	}
}

// OptPageMeta is optional PageMeta.
type OptPageMeta struct {
	Value PageMeta
	Set   bool
}

// IsSet returns true if OptPageMeta was set.
func (o OptPageMeta) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPageMeta) Reset() {
	var v PageMeta
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPageMeta) SetTo(v PageMeta) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPageMeta) Get() (v PageMeta, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPageMeta) Or(d PageMeta) PageMeta {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPayloadMetaView returns new OptPayloadMetaView with value set to v.
func NewOptPayloadMetaView(v PayloadMetaView) OptPayloadMetaView {
	return OptPayloadMetaView{
		Value: v,
		Set:   true,
	}
}

// OptPayloadMetaView is optional PayloadMetaView.
type OptPayloadMetaView struct {
	Value PayloadMetaView
	Set   bool
}

// IsSet returns true if OptPayloadMetaView was set.
func (o OptPayloadMetaView) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPayloadMetaView) Reset() {
	var v PayloadMetaView
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPayloadMetaView) SetTo(v PayloadMetaView) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPayloadMetaView) Get() (v PayloadMetaView, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPayloadMetaView) Or(d PayloadMetaView) PayloadMetaView {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPayloadTraces returns new OptPayloadTraces with value set to v.
func NewOptPayloadTraces(v PayloadTraces) OptPayloadTraces {
	return OptPayloadTraces{
		Value: v,
		Set:   true,
	}
}

// OptPayloadTraces is optional PayloadTraces.
type OptPayloadTraces struct {
	Value PayloadTraces
	Set   bool
}

// IsSet returns true if OptPayloadTraces was set.
func (o OptPayloadTraces) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPayloadTraces) Reset() {
	var v PayloadTraces
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPayloadTraces) SetTo(v PayloadTraces) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPayloadTraces) Get() (v PayloadTraces, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPayloadTraces) Or(d PayloadTraces) PayloadTraces {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes returns new OptPayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes with value set to v.
func NewOptPayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes(v PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes) OptPayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes {
	return OptPayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes{
		Value: v,
		Set:   true,
	}
}

// OptPayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes is optional PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes.
type OptPayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes struct {
	Value PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes
	Set   bool
}

// IsSet returns true if OptPayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes was set.
func (o OptPayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes) IsSet() bool {
	return o.Set
}

// Reset unsets value.
func (o *OptPayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes) Reset() {
	var v PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes) SetTo(v PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes) Get() (v PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes) Or(d PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes) PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPayloadTracesResourceSpansItemResourceAttributes returns new OptPayloadTracesResourceSpansItemResourceAttributes with value set to v.
func NewOptPayloadTracesResourceSpansItemResourceAttributes(v PayloadTracesResourceSpansItemResourceAttributes) OptPayloadTracesResourceSpansItemResourceAttributes {
	return OptPayloadTracesResourceSpansItemResourceAttributes{
		Value: v,
		Set:   true,
	}
}

// OptPayloadTracesResourceSpansItemResourceAttributes is optional PayloadTracesResourceSpansItemResourceAttributes.
type OptPayloadTracesResourceSpansItemResourceAttributes struct {
	Value PayloadTracesResourceSpansItemResourceAttributes
	Set   bool
}

// IsSet returns true if OptPayloadTracesResourceSpansItemResourceAttributes was set.
func (o OptPayloadTracesResourceSpansItemResourceAttributes) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPayloadTracesResourceSpansItemResourceAttributes) Reset() {
	var v PayloadTracesResourceSpansItemResourceAttributes
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPayloadTracesResourceSpansItemResourceAttributes) SetTo(v PayloadTracesResourceSpansItemResourceAttributes) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPayloadTracesResourceSpansItemResourceAttributes) Get() (v PayloadTracesResourceSpansItemResourceAttributes, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPayloadTracesResourceSpansItemResourceAttributes) Or(d PayloadTracesResourceSpansItemResourceAttributes) PayloadTracesResourceSpansItemResourceAttributes {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSdkMeta returns new OptSdkMeta with value set to v.
func NewOptSdkMeta(v SdkMeta) OptSdkMeta {
	return OptSdkMeta{
		Value: v,
		Set:   true,
	}
}

// OptSdkMeta is optional SdkMeta.
type OptSdkMeta struct {
	Value SdkMeta
	Set   bool
}

// IsSet returns true if OptSdkMeta was set.
func (o OptSdkMeta) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSdkMeta) Reset() {
	var v SdkMeta
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSdkMeta) SetTo(v SdkMeta) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSdkMeta) Get() (v SdkMeta, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSdkMeta) Or(d SdkMeta) SdkMeta {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSessionMeta returns new OptSessionMeta with value set to v.
func NewOptSessionMeta(v SessionMeta) OptSessionMeta {
	return OptSessionMeta{
		Value: v,
		Set:   true,
	}
}

// OptSessionMeta is optional SessionMeta.
type OptSessionMeta struct {
	Value SessionMeta
	Set   bool
}

// IsSet returns true if OptSessionMeta was set.
func (o OptSessionMeta) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSessionMeta) Reset() {
	var v SessionMeta
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSessionMeta) SetTo(v SessionMeta) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSessionMeta) Get() (v SessionMeta, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSessionMeta) Or(d SessionMeta) SessionMeta {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSessionMetaAttributes returns new OptSessionMetaAttributes with value set to v.
func NewOptSessionMetaAttributes(v SessionMetaAttributes) OptSessionMetaAttributes {
	return OptSessionMetaAttributes{
		Value: v,
		Set:   true,
	}
}

// OptSessionMetaAttributes is optional SessionMetaAttributes.
type OptSessionMetaAttributes struct {
	Value SessionMetaAttributes
	Set   bool
}

// IsSet returns true if OptSessionMetaAttributes was set.
func (o OptSessionMetaAttributes) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSessionMetaAttributes) Reset() {
	var v SessionMetaAttributes
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSessionMetaAttributes) SetTo(v SessionMetaAttributes) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSessionMetaAttributes) Get() (v SessionMetaAttributes, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSessionMetaAttributes) Or(d SessionMetaAttributes) SessionMetaAttributes {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUserMeta returns new OptUserMeta with value set to v.
func NewOptUserMeta(v UserMeta) OptUserMeta {
	return OptUserMeta{
		Value: v,
		Set:   true,
	}
}

// OptUserMeta is optional UserMeta.
type OptUserMeta struct {
	Value UserMeta
	Set   bool
}

// IsSet returns true if OptUserMeta was set.
func (o OptUserMeta) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUserMeta) Reset() {
	var v UserMeta
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUserMeta) SetTo(v UserMeta) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUserMeta) Get() (v UserMeta, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUserMeta) Or(d UserMeta) UserMeta {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUserMetaAttributes returns new OptUserMetaAttributes with value set to v.
func NewOptUserMetaAttributes(v UserMetaAttributes) OptUserMetaAttributes {
	return OptUserMetaAttributes{
		Value: v,
		Set:   true,
	}
}

// OptUserMetaAttributes is optional UserMetaAttributes.
type OptUserMetaAttributes struct {
	Value UserMetaAttributes
	Set   bool
}

// IsSet returns true if OptUserMetaAttributes was set.
func (o OptUserMetaAttributes) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUserMetaAttributes) Reset() {
	var v UserMetaAttributes
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUserMetaAttributes) SetTo(v UserMetaAttributes) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUserMetaAttributes) Get() (v UserMetaAttributes, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUserMetaAttributes) Or(d UserMetaAttributes) UserMetaAttributes {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/PageMeta
type PageMeta struct {
	URL OptString `json:"url"`
}

// GetURL returns the value of URL.
func (s *PageMeta) GetURL() OptString {
	return s.URL
}

// SetURL sets the value of URL.
func (s *PageMeta) SetURL(val OptString) {
	s.URL = val
}

// Ref: #/components/schemas/Payload
type Payload struct {
	Events       []Event          `json:"events"`
	Logs         []Log            `json:"logs"`
	Exceptions   []Exception      `json:"exceptions"`
	Measurements []Measurement    `json:"measurements"`
	Meta         PayloadMeta      `json:"meta"`
	Traces       OptPayloadTraces `json:"traces"`
}

// GetEvents returns the value of Events.
func (s *Payload) GetEvents() []Event {
	return s.Events
}

// GetLogs returns the value of Logs.
func (s *Payload) GetLogs() []Log {
	return s.Logs
}

// GetExceptions returns the value of Exceptions.
func (s *Payload) GetExceptions() []Exception {
	return s.Exceptions
}

// GetMeasurements returns the value of Measurements.
func (s *Payload) GetMeasurements() []Measurement {
	return s.Measurements
}

// GetMeta returns the value of Meta.
func (s *Payload) GetMeta() PayloadMeta {
	return s.Meta
}

// GetTraces returns the value of Traces.
func (s *Payload) GetTraces() OptPayloadTraces {
	return s.Traces
}

// SetEvents sets the value of Events.
func (s *Payload) SetEvents(val []Event) {
	s.Events = val
}

// SetLogs sets the value of Logs.
func (s *Payload) SetLogs(val []Log) {
	s.Logs = val
}

// SetExceptions sets the value of Exceptions.
func (s *Payload) SetExceptions(val []Exception) {
	s.Exceptions = val
}

// SetMeasurements sets the value of Measurements.
func (s *Payload) SetMeasurements(val []Measurement) {
	s.Measurements = val
}

// SetMeta sets the value of Meta.
func (s *Payload) SetMeta(val PayloadMeta) {
	s.Meta = val
}

// SetTraces sets the value of Traces.
func (s *Payload) SetTraces(val OptPayloadTraces) {
	s.Traces = val
}

type PayloadMeta struct {
	Sdk     OptSdkMeta         `json:"sdk"`
	App     OptAppMeta         `json:"app"`
	User    OptUserMeta        `json:"user"`
	Session OptSessionMeta     `json:"session"`
	Page    OptPageMeta        `json:"page"`
	Browser OptBrowserMeta     `json:"browser"`
	View    OptPayloadMetaView `json:"view"`
}

// GetSdk returns the value of Sdk.
func (s *PayloadMeta) GetSdk() OptSdkMeta {
	return s.Sdk
}

// GetApp returns the value of App.
func (s *PayloadMeta) GetApp() OptAppMeta {
	return s.App
}

// GetUser returns the value of User.
func (s *PayloadMeta) GetUser() OptUserMeta {
	return s.User
}

// GetSession returns the value of Session.
func (s *PayloadMeta) GetSession() OptSessionMeta {
	return s.Session
}

// GetPage returns the value of Page.
func (s *PayloadMeta) GetPage() OptPageMeta {
	return s.Page
}

// GetBrowser returns the value of Browser.
func (s *PayloadMeta) GetBrowser() OptBrowserMeta {
	return s.Browser
}

// GetView returns the value of View.
func (s *PayloadMeta) GetView() OptPayloadMetaView {
	return s.View
}

// SetSdk sets the value of Sdk.
func (s *PayloadMeta) SetSdk(val OptSdkMeta) {
	s.Sdk = val
}

// SetApp sets the value of App.
func (s *PayloadMeta) SetApp(val OptAppMeta) {
	s.App = val
}

// SetUser sets the value of User.
func (s *PayloadMeta) SetUser(val OptUserMeta) {
	s.User = val
}

// SetSession sets the value of Session.
func (s *PayloadMeta) SetSession(val OptSessionMeta) {
	s.Session = val
}

// SetPage sets the value of Page.
func (s *PayloadMeta) SetPage(val OptPageMeta) {
	s.Page = val
}

// SetBrowser sets the value of Browser.
func (s *PayloadMeta) SetBrowser(val OptBrowserMeta) {
	s.Browser = val
}

// SetView sets the value of View.
func (s *PayloadMeta) SetView(val OptPayloadMetaView) {
	s.View = val
}

type PayloadMetaView struct {
	Name OptString `json:"name"`
}

// GetName returns the value of Name.
func (s *PayloadMetaView) GetName() OptString {
	return s.Name
}

// SetName sets the value of Name.
func (s *PayloadMetaView) SetName(val OptString) {
	s.Name = val
}

type PayloadTraces struct {
	ResourceSpans []PayloadTracesResourceSpansItem `json:"resourceSpans"`
}

// GetResourceSpans returns the value of ResourceSpans.
func (s *PayloadTraces) GetResourceSpans() []PayloadTracesResourceSpansItem {
	return s.ResourceSpans
}

// SetResourceSpans sets the value of ResourceSpans.
func (s *PayloadTraces) SetResourceSpans(val []PayloadTracesResourceSpansItem) {
	s.ResourceSpans = val
}

type PayloadTracesResourceSpansItem struct {
	Resource                    PayloadTracesResourceSpansItemResource                          `json:"resource"`
	InstrumentationLibrarySpans []PayloadTracesResourceSpansItemInstrumentationLibrarySpansItem `json:"instrumentationLibrarySpans"`
}

// GetResource returns the value of Resource.
func (s *PayloadTracesResourceSpansItem) GetResource() PayloadTracesResourceSpansItemResource {
	return s.Resource
}

// GetInstrumentationLibrarySpans returns the value of InstrumentationLibrarySpans.
func (s *PayloadTracesResourceSpansItem) GetInstrumentationLibrarySpans() []PayloadTracesResourceSpansItemInstrumentationLibrarySpansItem {
	return s.InstrumentationLibrarySpans
}

// SetResource sets the value of Resource.
func (s *PayloadTracesResourceSpansItem) SetResource(val PayloadTracesResourceSpansItemResource) {
	s.Resource = val
}

// SetInstrumentationLibrarySpans sets the value of InstrumentationLibrarySpans.
func (s *PayloadTracesResourceSpansItem) SetInstrumentationLibrarySpans(val []PayloadTracesResourceSpansItemInstrumentationLibrarySpansItem) {
	s.InstrumentationLibrarySpans = val
}

type PayloadTracesResourceSpansItemInstrumentationLibrarySpansItem struct {
	InstrumentationLibrary PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemInstrumentationLibrary `json:"instrumentationLibrary"`
	Spans                  []PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem            `json:"spans"`
}

// GetInstrumentationLibrary returns the value of InstrumentationLibrary.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItem) GetInstrumentationLibrary() PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemInstrumentationLibrary {
	return s.InstrumentationLibrary
}

// GetSpans returns the value of Spans.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItem) GetSpans() []PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem {
	return s.Spans
}

// SetInstrumentationLibrary sets the value of InstrumentationLibrary.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItem) SetInstrumentationLibrary(val PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemInstrumentationLibrary) {
	s.InstrumentationLibrary = val
}

// SetSpans sets the value of Spans.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItem) SetSpans(val []PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) {
	s.Spans = val
}

type PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemInstrumentationLibrary struct {
	Name    string `json:"name"`
	Version string `json:"version"`
}

// GetName returns the value of Name.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemInstrumentationLibrary) GetName() string {
	return s.Name
}

// GetVersion returns the value of Version.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemInstrumentationLibrary) GetVersion() string {
	return s.Version
}

// SetName sets the value of Name.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemInstrumentationLibrary) SetName(val string) {
	s.Name = val
}

// SetVersion sets the value of Version.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemInstrumentationLibrary) SetVersion(val string) {
	s.Version = val
}

type PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem struct {
	Attributes             OptPayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes `json:"attributes"`
	DroppedAttributesCount OptInt                                                                              `json:"droppedAttributesCount"`
	DroppedEventsCount     OptInt                                                                              `json:"droppedEventsCount"`
	DroppedLinksCount      OptInt                                                                              `json:"droppedLinksCount"`
	EndTimeUnixNano        int                                                                                 `json:"endTimeUnixNano"`
	Events                 []SpanEvent                                                                         `json:"events"`
	Kind                   PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemKind          `json:"kind"`
	Links                  []PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemLinksItem   `json:"links"`
	Name                   string                                                                              `json:"name"`
	ParentSpanId           OptString                                                                           `json:"parentSpanId"`
	SpanId                 string                                                                              `json:"spanId"`
	StartTimeUnixNano      int                                                                                 `json:"startTimeUnixNano"`
	Status                 PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemStatus        `json:"status"`
	TraceId                string                                                                              `json:"traceId"`
}

// GetAttributes returns the value of Attributes.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) GetAttributes() OptPayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes {
	return s.Attributes
}

// GetDroppedAttributesCount returns the value of DroppedAttributesCount.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) GetDroppedAttributesCount() OptInt {
	return s.DroppedAttributesCount
}

// GetDroppedEventsCount returns the value of DroppedEventsCount.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) GetDroppedEventsCount() OptInt {
	return s.DroppedEventsCount
}

// GetDroppedLinksCount returns the value of DroppedLinksCount.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) GetDroppedLinksCount() OptInt {
	return s.DroppedLinksCount
}

// GetEndTimeUnixNano returns the value of EndTimeUnixNano.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) GetEndTimeUnixNano() int {
	return s.EndTimeUnixNano
}

// GetEvents returns the value of Events.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) GetEvents() []SpanEvent {
	return s.Events
}

// GetKind returns the value of Kind.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) GetKind() PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemKind {
	return s.Kind
}

// GetLinks returns the value of Links.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) GetLinks() []PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemLinksItem {
	return s.Links
}

// GetName returns the value of Name.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) GetName() string {
	return s.Name
}

// GetParentSpanId returns the value of ParentSpanId.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) GetParentSpanId() OptString {
	return s.ParentSpanId
}

// GetSpanId returns the value of SpanId.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) GetSpanId() string {
	return s.SpanId
}

// GetStartTimeUnixNano returns the value of StartTimeUnixNano.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) GetStartTimeUnixNano() int {
	return s.StartTimeUnixNano
}

// GetStatus returns the value of Status.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) GetStatus() PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemStatus {
	return s.Status
}

// GetTraceId returns the value of TraceId.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) GetTraceId() string {
	return s.TraceId
}

// SetAttributes sets the value of Attributes.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) SetAttributes(val OptPayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes) {
	s.Attributes = val
}

// SetDroppedAttributesCount sets the value of DroppedAttributesCount.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) SetDroppedAttributesCount(val OptInt) {
	s.DroppedAttributesCount = val
}

// SetDroppedEventsCount sets the value of DroppedEventsCount.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) SetDroppedEventsCount(val OptInt) {
	s.DroppedEventsCount = val
}

// SetDroppedLinksCount sets the value of DroppedLinksCount.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) SetDroppedLinksCount(val OptInt) {
	s.DroppedLinksCount = val
}

// SetEndTimeUnixNano sets the value of EndTimeUnixNano.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) SetEndTimeUnixNano(val int) {
	s.EndTimeUnixNano = val
}

// SetEvents sets the value of Events.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) SetEvents(val []SpanEvent) {
	s.Events = val
}

// SetKind sets the value of Kind.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) SetKind(val PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemKind) {
	s.Kind = val
}

// SetLinks sets the value of Links.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) SetLinks(val []PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemLinksItem) {
	s.Links = val
}

// SetName sets the value of Name.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) SetName(val string) {
	s.Name = val
}

// SetParentSpanId sets the value of ParentSpanId.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) SetParentSpanId(val OptString) {
	s.ParentSpanId = val
}

// SetSpanId sets the value of SpanId.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) SetSpanId(val string) {
	s.SpanId = val
}

// SetStartTimeUnixNano sets the value of StartTimeUnixNano.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) SetStartTimeUnixNano(val int) {
	s.StartTimeUnixNano = val
}

// SetStatus sets the value of Status.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) SetStatus(val PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemStatus) {
	s.Status = val
}

// SetTraceId sets the value of TraceId.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItem) SetTraceId(val string) {
	s.TraceId = val
}

type PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes struct {
	Key   string                                                                                `json:"key"`
	Value PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributesValue `json:"value"`
}

// GetKey returns the value of Key.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes) GetKey() string {
	return s.Key
}

// GetValue returns the value of Value.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes) GetValue() PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributesValue {
	return s.Value
}

// SetKey sets the value of Key.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes) SetKey(val string) {
	s.Key = val
}

// SetValue sets the value of Value.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributes) SetValue(val PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributesValue) {
	s.Value = val
}

type PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemAttributesValue struct{}

type PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemKind int

const (
	PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemKind1 PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemKind = 1
)

// AllValues returns all PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemKind values.
func (PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemKind) AllValues() []PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemKind {
	return []PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemKind{
		PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemKind1,
	}
}

type PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemLinksItem map[string]string

func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemLinksItem) init() PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemLinksItem {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

type PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemStatus struct {
	Code    OptInt    `json:"code"`
	Message OptString `json:"message"`
}

// GetCode returns the value of Code.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemStatus) GetCode() OptInt {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemStatus) GetMessage() OptString {
	return s.Message
}

// SetCode sets the value of Code.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemStatus) SetCode(val OptInt) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *PayloadTracesResourceSpansItemInstrumentationLibrarySpansItemSpansItemStatus) SetMessage(val OptString) {
	s.Message = val
}

type PayloadTracesResourceSpansItemResource struct {
	Attributes OptPayloadTracesResourceSpansItemResourceAttributes `json:"attributes"`
}

// GetAttributes returns the value of Attributes.
func (s *PayloadTracesResourceSpansItemResource) GetAttributes() OptPayloadTracesResourceSpansItemResourceAttributes {
	return s.Attributes
}

// SetAttributes sets the value of Attributes.
func (s *PayloadTracesResourceSpansItemResource) SetAttributes(val OptPayloadTracesResourceSpansItemResourceAttributes) {
	s.Attributes = val
}

type PayloadTracesResourceSpansItemResourceAttributes struct {
	Key   string                                                `json:"key"`
	Value PayloadTracesResourceSpansItemResourceAttributesValue `json:"value"`
}

// GetKey returns the value of Key.
func (s *PayloadTracesResourceSpansItemResourceAttributes) GetKey() string {
	return s.Key
}

// GetValue returns the value of Value.
func (s *PayloadTracesResourceSpansItemResourceAttributes) GetValue() PayloadTracesResourceSpansItemResourceAttributesValue {
	return s.Value
}

// SetKey sets the value of Key.
func (s *PayloadTracesResourceSpansItemResourceAttributes) SetKey(val string) {
	s.Key = val
}

// SetValue sets the value of Value.
func (s *PayloadTracesResourceSpansItemResourceAttributes) SetValue(val PayloadTracesResourceSpansItemResourceAttributesValue) {
	s.Value = val
}

type PayloadTracesResourceSpansItemResourceAttributesValue map[string]string

func (s *PayloadTracesResourceSpansItemResourceAttributesValue) init() PayloadTracesResourceSpansItemResourceAttributesValue {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/SdkMeta
type SdkMeta struct {
	Name    string `json:"name"`
	Version string `json:"version"`
}

// GetName returns the value of Name.
func (s *SdkMeta) GetName() string {
	return s.Name
}

// GetVersion returns the value of Version.
func (s *SdkMeta) GetVersion() string {
	return s.Version
}

// SetName sets the value of Name.
func (s *SdkMeta) SetName(val string) {
	s.Name = val
}

// SetVersion sets the value of Version.
func (s *SdkMeta) SetVersion(val string) {
	s.Version = val
}

// Ref: #/components/schemas/SessionMeta
type SessionMeta struct {
	ID         OptString                `json:"id"`
	Attributes OptSessionMetaAttributes `json:"attributes"`
}

// GetID returns the value of ID.
func (s *SessionMeta) GetID() OptString {
	return s.ID
}

// GetAttributes returns the value of Attributes.
func (s *SessionMeta) GetAttributes() OptSessionMetaAttributes {
	return s.Attributes
}

// SetID sets the value of ID.
func (s *SessionMeta) SetID(val OptString) {
	s.ID = val
}

// SetAttributes sets the value of Attributes.
func (s *SessionMeta) SetAttributes(val OptSessionMetaAttributes) {
	s.Attributes = val
}

type SessionMetaAttributes map[string]string

func (s *SessionMetaAttributes) init() SessionMetaAttributes {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/SpanEvent
type SpanEvent struct {
	Attributes             []jx.Raw  `json:"attributes"`
	DroppedAttributesCount OptInt    `json:"droppedAttributesCount"`
	Name                   string    `json:"name"`
	TimeUnixNano           OptString `json:"timeUnixNano"`
}

// GetAttributes returns the value of Attributes.
func (s *SpanEvent) GetAttributes() []jx.Raw {
	return s.Attributes
}

// GetDroppedAttributesCount returns the value of DroppedAttributesCount.
func (s *SpanEvent) GetDroppedAttributesCount() OptInt {
	return s.DroppedAttributesCount
}

// GetName returns the value of Name.
func (s *SpanEvent) GetName() string {
	return s.Name
}

// GetTimeUnixNano returns the value of TimeUnixNano.
func (s *SpanEvent) GetTimeUnixNano() OptString {
	return s.TimeUnixNano
}

// SetAttributes sets the value of Attributes.
func (s *SpanEvent) SetAttributes(val []jx.Raw) {
	s.Attributes = val
}

// SetDroppedAttributesCount sets the value of DroppedAttributesCount.
func (s *SpanEvent) SetDroppedAttributesCount(val OptInt) {
	s.DroppedAttributesCount = val
}

// SetName sets the value of Name.
func (s *SpanEvent) SetName(val string) {
	s.Name = val
}

// SetTimeUnixNano sets the value of TimeUnixNano.
func (s *SpanEvent) SetTimeUnixNano(val OptString) {
	s.TimeUnixNano = val
}

// Ref: #/components/schemas/StackFrame
type StackFrame struct {
	Colno    OptInt    `json:"colno"`
	Filename OptString `json:"filename"`
	Function OptString `json:"function"`
	InApp    OptBool   `json:"in_app"`
	Lineno   OptInt    `json:"lineno"`
}

// GetColno returns the value of Colno.
func (s *StackFrame) GetColno() OptInt {
	return s.Colno
}

// GetFilename returns the value of Filename.
func (s *StackFrame) GetFilename() OptString {
	return s.Filename
}

// GetFunction returns the value of Function.
func (s *StackFrame) GetFunction() OptString {
	return s.Function
}

// GetInApp returns the value of InApp.
func (s *StackFrame) GetInApp() OptBool {
	return s.InApp
}

// GetLineno returns the value of Lineno.
func (s *StackFrame) GetLineno() OptInt {
	return s.Lineno
}

// SetColno sets the value of Colno.
func (s *StackFrame) SetColno(val OptInt) {
	s.Colno = val
}

// SetFilename sets the value of Filename.
func (s *StackFrame) SetFilename(val OptString) {
	s.Filename = val
}

// SetFunction sets the value of Function.
func (s *StackFrame) SetFunction(val OptString) {
	s.Function = val
}

// SetInApp sets the value of InApp.
func (s *StackFrame) SetInApp(val OptBool) {
	s.InApp = val
}

// SetLineno sets the value of Lineno.
func (s *StackFrame) SetLineno(val OptInt) {
	s.Lineno = val
}

// Ref: #/components/schemas/UserMeta
type UserMeta struct {
	Username   OptString             `json:"username"`
	ID         OptString             `json:"id"`
	Email      OptString             `json:"email"`
	Attributes OptUserMetaAttributes `json:"attributes"`
}

// GetUsername returns the value of Username.
func (s *UserMeta) GetUsername() OptString {
	return s.Username
}

// GetID returns the value of ID.
func (s *UserMeta) GetID() OptString {
	return s.ID
}

// GetEmail returns the value of Email.
func (s *UserMeta) GetEmail() OptString {
	return s.Email
}

// GetAttributes returns the value of Attributes.
func (s *UserMeta) GetAttributes() OptUserMetaAttributes {
	return s.Attributes
}

// SetUsername sets the value of Username.
func (s *UserMeta) SetUsername(val OptString) {
	s.Username = val
}

// SetID sets the value of ID.
func (s *UserMeta) SetID(val OptString) {
	s.ID = val
}

// SetEmail sets the value of Email.
func (s *UserMeta) SetEmail(val OptString) {
	s.Email = val
}

// SetAttributes sets the value of Attributes.
func (s *UserMeta) SetAttributes(val OptUserMetaAttributes) {
	s.Attributes = val
}

type UserMetaAttributes map[string]string

func (s *UserMetaAttributes) init() UserMetaAttributes {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}
